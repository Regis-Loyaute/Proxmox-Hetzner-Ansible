---
- hosts: hetzner_servers
  gather_facts: yes
  become: yes

  tasks:
    - name: Backup current network interfaces configuration
      ansible.builtin.copy:
        src: /etc/network/interfaces
        dest: /etc/network/interfaces.bak
        remote_src: yes

    - name: Configure network interfaces
      ansible.builtin.template:
        src: templates/interfaces.j2
        dest: /etc/network/interfaces
      notify: restart network services

    - name: Ensure pfSense ISO directory exists
      ansible.builtin.file:
        path: "{{ iso_directory }}"
        state: directory

    - name: Check if pfSense ISO is already unzipped
      ansible.builtin.stat:
        path: "{{ iso_directory }}/{{ pfsense_iso }}"
      register: pfsense_iso_stat

    - name: Download pfSense ISO if not exists
      ansible.builtin.get_url:
        url: "{{ pfsense_iso_url }}"
        dest: "{{ iso_directory }}/{{ pfsense_iso }}.gz"
        mode: '0644'
      register: download_result
      until: download_result is succeeded
      retries: 3
      delay: 5
      when: not pfsense_iso_stat.stat.exists

    - name: Unzip pfSense ISO if not already done
      ansible.builtin.shell:
        cmd: gunzip -k "{{ iso_directory }}/{{ pfsense_iso }}.gz"
      args:
        creates: "{{ iso_directory }}/{{ pfsense_iso }}"
      when: download_result is changed or not pfsense_iso_stat.stat.exists

  handlers:
    - name: restart network services
      ansible.builtin.shell: |
        systemctl restart networking
        ifup --force vmbr0 vmbr1 vmbr2
      listen: "restart network services"
